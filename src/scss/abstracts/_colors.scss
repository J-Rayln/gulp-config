@use "sass:color";
@use "sass:string";

// theme colors
/* prettier-ignore */
$theme-colors: (
  primary: (
    "blue":   hsl(239, 27%, 47%),
    "teal":   hsl(145, 31%, 56%),
    "green":  hsl(77, 45%, 52%),
    "purple": hsl(321, 15%, 35%),
    "salmon": hsl(4, 98%, 75%),
    "gray":   hsl(185, 6%, 42%),
  ),
  highlight: (
    "blue":   hsl(240, 22%, 92%),
    "teal":   hsl(190, 38%, 94%),
    "green":  hsl(78, 46%, 93%),
    "purple": hsl(320, 29%, 94%),
    "salmon": hsl(2, 100%, 95%),
    "gray":   hsl(0, 0%, 90%),
  ),
  neutral: (
    "black":  hsl(0, 0%, 0%),
    "white":  hsl(0, 0%, 100%),
  )
);

$test: map-get($theme-colors, "primary", "blue");

@function opacity($color, $opacity) {
  $h: color.hue($color);
  $s: color.saturation($color);
  $l: color.lightness($color);

  @return hsla($h, $s, $l, $opacity);
}

@function get-hsl-values($color) {
  $h: color.hue($color);
  $s: color.saturation($color);
  $l: color.lightness($color);

  @return $h $s $l;
}

:root {
  @each $type, $colors in $theme-colors {
    @each $color, $value in $colors {
      // returns only the first 3 characters of the type value
      $t: string.slice($type, 1, 3);

      --clr-#{$t}-#{$color}: #{get-hsl-values($value)};
    }
  }
}

.bg-1 {
  background-color: opacity($test, -0.3);
}

.bg-2 {
  background-color: $test;
}
